#include <stdio.h>
#include <string.h>
#include <time.h>
#define SIZE 100
#define RAND_MAX 379

typedef struct complex_t complex;

struct complex_t{
	float Real,
		  Imaginary;
};
 
complex add(complex z, complex u){
	complex w;
	w.Real = z.Real + u.Real;
	w.Imaginary = z.Imaginary + u.Imaginary;
	return w;
}

complex sub(complex z, complex u){
	complex w;
	w.Real = z.Real - u.Real;
	w.Imaginary = z.Imaginary - u.Imaginary;
	return w;
}

float rand_float(){
	return ((float)rand() / (float)(RAND_MAX)) * 0.347;
}

complex load_complex_numbers(){
	complex z;
	z.Real = rand_float();
	z.Imaginary = rand_float();
	return z;
}

int main(){
	srand((unsigned int)time(NULL));
	complex BASE[SIZE], ADD[SIZE/2], SUB[SIZE/2];
	for (int i = 0; i < SIZE; i++){
		BASE[i] = load_complex_numbers();
		printf("%d: %.1f + %.1fi \n", i+1, BASE[i].Real, BASE[i].Imaginary);
	}
	for (int i = 0; i < SIZE; i+=2){
		ADD[i] = add(BASE[i], BASE[i + 1]);
		SUB[i] = sub(BASE[i], BASE[i + 1]);
	}
	return 0;
}
